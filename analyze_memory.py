# analyze_memory.py
import json
import os

MEMORY_FILE = "answer_memory.json"

def load_memory():
    """‡πÇ‡∏´‡∏•‡∏î memory ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
    if os.path.exists(MEMORY_FILE):
        with open(MEMORY_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    return []

def analyze_memory():
    """‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• memory"""
    memory = load_memory()
    total_answers = len(memory)

    if total_answers == 0:
        return "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö"

    summary_text = f"""
üìö ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö:
- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_answers}
- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö 5 ‡∏Ç‡πâ‡∏≠‡πÅ‡∏£‡∏Å:
"""

    # ‡∏î‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö (‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5 ‡∏Ç‡πâ‡∏≠)
    for i, item in enumerate(memory[:5]):
        summary_text += f"\n  {i+1}. {item['answer']} (‡πÄ‡∏ß‡∏•‡∏≤: {item['timestamp']})"

    return summary_text.strip()
